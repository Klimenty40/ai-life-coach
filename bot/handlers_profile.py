from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardRemove,
)
from telegram.ext import (
    ContextTypes,
    ConversationHandler,
)

PROFILE_MENU = "PROFILE_MENU"

async def profile_entry(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> str:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è ‚Äî –≤—ã–±–æ—Ä, —á—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å."""
    kb = [
        [InlineKeyboardButton("‚ôÇÔ∏è / ‚ôÄÔ∏è –ü–æ–ª", callback_data="PROF_GENDER")],
        [InlineKeyboardButton("üéÇ –í–æ–∑—Ä–∞—Å—Ç", callback_data="PROF_AGE")],
        [InlineKeyboardButton("‚öñÔ∏è –í–µ—Å", callback_data="PROF_WEIGHT")],
        [InlineKeyboardButton("üìè –†–æ—Å—Ç", callback_data="PROF_HEIGHT")],
        [InlineKeyboardButton("üéØ –¶–µ–ª—å", callback_data="PROF_GOAL")],
        [InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="BACK_MAIN")],
    ]
    if update.callback_query:
         # –í–µ—Ä–Ω—É–ª–∏—Å—å –∏–∑ inline-–∫–Ω–æ–ø–∫–∏ ¬´‚Üê –ù–∞–∑–∞–¥¬ª ‚Äì —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await update.callback_query.edit_message_text(
       "üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å</b>\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
            reply_markup = InlineKeyboardMarkup(kb),
            parse_mode = "HTML",
        )
    else:
      # –ü—Ä–∏—à–ª–∏ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –µ–≥–æ –±—ã–ª–æ
      # —Ä–∞–∑—Ä–µ—à–µ–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ
        await update.message.reply_text(
        "üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å</b>\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
            reply_markup = InlineKeyboardMarkup(kb),
            parse_mode = "HTML",
        )
    return PROFILE_MENU


async def profile_callback(update: Update, ctx: ContextTypes.DEFAULT_TYPE) -> str:
    """–ü–æ–∫–∞ –≤—ã–≤–æ–¥–∏—Ç –∑–∞–≥–ª—É—à–∫—É –æ —Ç–æ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."""
    data = update.callback_query.data
    await update.callback_query.answer()

    if data == "BACK_MAIN":
        # –í–æ–∑–≤—Ä–∞—Ç –∫ ConversationHandler.END –ø–æ–∑–≤–æ–ª–∏—Ç –≤–Ω–µ—à–Ω–µ–º—É —Ä–æ—É—Ç–µ—Ä—É
        # –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
        return ConversationHandler.END

    await update.callback_query.edit_message_text(
        f"üöß –†–∞–∑–¥–µ–ª <code>{data}</code> –µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω.",
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("‚Üê –ù–∞–∑–∞–¥", callback_data="BACK_PROFILE")]]
        ),
    )
    return PROFILE_MENU


# —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç ¬´–≤–∏–¥–µ–ª¬ª —ç—Ç–∏ –∏–º–µ–Ω–∞
__all__ = ["profile_entry", "profile_callback", "PROFILE_MENU"]

async def profile_value_handler(
    update: Update, ctx: ContextTypes.DEFAULT_TYPE
) -> str:
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è, –≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç."""
    value = update.message.text.strip()
    await update.message.reply_text(
        f"‚úÖ –°–æ—Ö—Ä–∞–Ω–∏–ª: <code>{value}</code>",
        parse_mode="HTML",
        reply_markup=ReplyKeyboardRemove(),
    )
    return ConversationHandler.END

# —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –±–æ—Ç.py —É–≤–∏–¥–µ–ª –∏–º—è
__all__.append("profile_value_handler")